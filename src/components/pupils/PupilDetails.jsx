import React, { useEffect, useRef } from 'react'
import { connect } from 'react-redux'
import { setNotification, setFetchingData } from '../../reducers/notificationReducer'
import pupilsService from '../../services/pupils'
import moment from 'moment'

import { Container, Row, Col, Card } from 'react-bootstrap'
import { CommonLayout } from '../views'
import { useState } from 'react'
import Emoji from '../common/Emoji'

const PupilDetails = ({ user, setFetchingData, setNotification, match }) => {

	const cardStyle = 'my-3'

	const componentIsMounted = useRef(true)
	const [pupil, setPupil] = useState({})

	useEffect(() => {
		if (user) {
			setFetchingData(true)
			pupilsService.setToken(user.token)
			pupilsService.pupilDetailsById(match.params.id)
				.then((pupil) => {
					setPupil(pupil)

				})
				.catch(error => {
					const { message } = { ...error.response.data }
					setNotification({
						message: `–©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫, —Å–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ: ${message}`,
						variant: 'danger'
					}, 5)
				})
				.finally(() => {
					if (componentIsMounted.current) setFetchingData(false)
				})
		}

	},[user, match.params.id, setNotification, setFetchingData])

	return <CommonLayout>
		<h1 className="text-center custom-font">–î–µ—Ç–∞–ª–∏ —É—á–Ω—è</h1>
		<h2 className="text-center text-muted custom-font">{pupil.name}</h2>
		<Container>
			<Row>
				<Col lg={6} className="px-1">
					{/*Contact info*/}
					<Card className={cardStyle}>
						<Card.Body>
							<Card.Subtitle className="text-muted mb-2">
								<Emoji label="Magnifying Glass Tilted Right" emoji={'üîé'} /> –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ñ –¥–∞–Ω—ñ
							</Card.Subtitle>
							<Card.Text>
								–î–∞—Ç–∞ –ø–æ–¥—è–Ω–Ω—è –∑–∞—è–≤—ñ: {moment(pupil.createdAt).format('LL')}
							</Card.Text>
							<Card.Text>
								–Ü–º&apos;—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ—ó –æ—Å–æ–±—ñ: {pupil.applicantName}
							</Card.Text>
							<Card.Text>
								–á—ó email: <a href={`mailto:${pupil.contactEmail}`}>{pupil.contactEmail}</a>
							</Card.Text>
							<Card.Text>
								–î–æ–º–∞—à–Ω—è –∞–¥—Ä–µ—Å–∞: {pupil.homeAddress}
							</Card.Text>
						</Card.Body>
					</Card>

					{/*Personal info*/}
					<Card className={cardStyle}>
						<Card.Body>
							<Card.Subtitle className="text-muted mb-2">
								<Emoji label="Memo" emoji={'üìù'} /> –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
							</Card.Subtitle>
							<Card.Text>
								–°—Ç–∞—Ç—å: {pupil.gender === '–ß–æ–ª–æ–≤—ñ—á–∞'
									? <Emoji label="Man" emoji={'üë®'} />
									: <Emoji label="Woman" emoji={'üë©'} />}
									&nbsp;{pupil.gender}
							</Card.Text>
							<Card.Text>
								–í–æ–∑—Ä–∞—Å—Ç: {moment(pupil.dateOfBirth).fromNow().split(' ')[0]} —Ä–æ–∫—ñ–≤
							</Card.Text>
							<Card.Text>
								–î–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è: {moment(pupil.dateOfBirth).format('Do MMMM YYYY')}
							</Card.Text>
							<Card.Text>
								–ù–∞–¥–∞–≤ —É—Å—ñ –¥–æ–∫—É–º–µ–Ω—Ç–∏?&nbsp;
								{pupil.docsPresent
									? <Emoji label="Check Mark" emoji={'‚úîÔ∏è'} />
									: <Emoji label="Cross Mark" emoji={'‚ùå'} />
								}
							</Card.Text>
							<Card.Text>
								–ó–∞—Ä–∞—Ö–æ–≤–∞–Ω –¥–æ –Ω–∞–≤—á–∞–Ω–Ω—è?&nbsp;
								{pupil.currentlyEnrolled
									? <Emoji label="Check Mark" emoji={'‚úîÔ∏è'} />
									: <Emoji label="Cross Mark" emoji={'‚ùå'} />
								}
							</Card.Text>
							<Card.Text>
								–í–∏–ø—É—Å—Ç–∏–≤—Å—è –∑—ñ —à–∫–æ–ª–∏?&nbsp;
								{pupil.graduated
									? <Emoji label="Check Mark" emoji={'‚úîÔ∏è'} />
									: <Emoji label="Cross Mark" emoji={'‚ùå'} />
								}
							</Card.Text>
							<Card.Text>
								–í—ñ–¥—Ä–∞—Ö–æ–≤–∞–Ω–∏–π?&nbsp;
								{pupil.suspended
									? <Emoji label="Check Mark" emoji={'‚úîÔ∏è'} />
									: <Emoji label="Cross Mark" emoji={'‚ùå'} />
								}
							</Card.Text>
							<Card.Text>
								–ü—ñ–ª—å–≥–∏: {pupil.hasBenefit}%
							</Card.Text>
							{pupil.info
								? <Card.Text>
									<Emoji label="Pencil" emoji={'‚úèÔ∏è'} /> {pupil.info}
								</Card.Text>
								: null
							}
						</Card.Body>
					</Card>
				</Col>

				<Col lg={6} className="px-1">
					{/*School info*/}
					<Card className={cardStyle}>
						<Card.Body>
							<Card.Subtitle className="text-muted mb-2">
								<Emoji label="Graduation Cap" emoji={'üéì'} /> –ù–∞–≤—á–∞–Ω–Ω—è
							</Card.Subtitle>
							<Card.Text>
								–ó–û–®: {pupil.mainSchool} {pupil.mainSchoolClass} –∫–ª–∞—Å
							</Card.Text>
							<Card.Text>
								–ú—É–∑–∏—á–Ω–∞ —à–∫–æ–ª–∞: {pupil.artSchoolClass} –∫–ª–∞—Å
							</Card.Text>
							{pupil.specialty
								? <Card.Text>
									–§–∞—Ö: {pupil.specialty.title}
								</Card.Text>
								: null}
							{pupil.schoolClasses
								?
								<Card.Text>
									–ö–ª–∞—Å–∏ –î–®–ú: {pupil.schoolClasses.map(item =>
										<span className="pl-3 d-block" key={item.id}>
											{item.title}
										</span>
									)}
								</Card.Text>
								: null
							}
						</Card.Body>
					</Card>

					{/* Parents info*/}
					<Card className={cardStyle}>
						<Card.Body>
							<Card.Subtitle className="text-muted mb-2">
								<Emoji label="Family" emoji={'üë™'} /> –ë–∞—Ç—å–∫–∏
							</Card.Subtitle>
							<Card.Text>
								<strong>{pupil.fathersName}</strong><br />
								{pupil.fathersPhone}<br />
								{pupil.fathersEmploymentInfo}<br />
							</Card.Text>
							<Card.Text>
								<strong>{pupil.mothersName}</strong><br />
								{pupil.mothersPhone}<br />
								{pupil.mothersEmploymentInfo}
							</Card.Text>
						</Card.Body>
					</Card>
				</Col>
			</Row>
		</Container>
	</CommonLayout>
}

const mapStateToProps = state => {
	return {
		user: state.user,
		fetchingData: state.notification.fetchingData
	}
}

const mapDispatchToProps = {
	setFetchingData,
	setNotification
}

export default connect(
	mapStateToProps,
	mapDispatchToProps
)(PupilDetails)
